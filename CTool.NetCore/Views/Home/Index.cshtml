@model CTool.NetCore.Models.BuilderInput
<section class="container">
    <div class="page-header">
        <h1>GCORE TOOL - Version 1.0.1</h1>
        <p class="lead">The website builder include database, service, app, template...</p>
    </div>
</section>
<section class="container">
    <h3>Step 1: Database Builder</h3>
    <p>Enter database connection information and click step by step on Build-In View, Build-In Stored Procedure, Build DB Dictionary butons</p>
    @using (Html.BeginForm("Index", "Home", FormMethod.Post, new { @id = "build-form" }))
    {
        <div class="row">
            <div class="form-group col-xs-6 col-sm-3">
                <label for="Host" class="sr-only">Host</label>
                @Html.TextBoxFor(m => m.Host, new { @class = "form-control", @placeholder = "Host" })
            </div>
            <div class="form-group col-xs-3 col-sm-2">
                <label class="sr-only">Tên DB</label>
                @Html.TextBoxFor(m => m.DBName, new { @class = "form-control", @placeholder = "Database name" })
            </div>
            <div class="form-group col-xs-3 col-sm-2">
                <label class="sr-only">Tên truy cập</label>
                @Html.TextBoxFor(m => m.Username, new { @class = "form-control", @placeholder = "Username" })
            </div>
            <div class="form-group col-xs-3 col-sm-2">
                <label class="sr-only">Mật khẩu</label>
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
            </div>
            <div class="form-group col-xs-6 col-sm-3">
                <label class="sr-only" Text="Namespace"></label>
                @Html.TextBoxFor(m => m.Namespace, new { @class = "form-control", @placeholder = "Namespace" })
            </div>
        </div>
        <div class="row">
            <div class="form-group col-xs-2">
                <button type="button" class="btn btn-primary">Load List of table</button>
            </div>
            <div class="form-group col-xs-2">
                @Html.ListBoxFor(m => m.SelectedTable,
                         new MultiSelectList((List<SelectListItem>)ViewData["tableList"], "Value", "Text"),
                         new { @class = "multiselect", style = "display:block;" })
            </div>
            <div class="form-group col-xs-2">
                <button type="button" class="btn btn-warning">Load List of view</button>
            </div>
            <div class="form-group col-xs-2">
                @Html.ListBoxFor(m => m.SelectedView,
                         new MultiSelectList((List<SelectListItem>)ViewData["viewList"], "Value", "Text"),
                         new { @class = "multiselect", style = "display:block;" })
            </div>
            <div class="form-group col-xs-2">
                <button type="button" class="btn btn-success">Load List of sp</button>
            </div>
            <div class="form-group col-xs-2">
                @Html.ListBoxFor(m => m.SelectedSp,
                         new MultiSelectList((List<SelectListItem>)ViewData["spList"], "Value", "Text"),
                         new { @class = "multiselect", style = "display:block;" })
            </div>
        </div>
    }
</section>
@section Scripts {
<script type="text/javascript">
    $(function () {
        $('[class="multiselect"]').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true
        });
    });
</script>
}